<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>342</x>
      <y>90</y>
      <w>264</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>&lt;&lt;application logic&gt;&gt;
_:InventoryManager_
--
-imr: InventoryMessageReport
--
#resetInventoryMessageReport(): void
#getDBdump(): String
#getInventoryItem(int): InventoryItem
#getInventoryMessageReport(): inventoryMessageReport
#resetInventoryMessageReport(): void
#decrementItemQty(int): void
#incrementItemQty(int, int): void
#setItemName(int, String): void
#setItemQty(int, int): void
#setItemThresh(int, int): void
#setItemPrice(int, doublet): void
#setItemDiscount(int, double): void
#createItem(int, String, double, double, int, int): InventoryItem
--
Keeps track of the items carried by the store, how many
of each have been sold, and how many of each remain.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>996</x>
      <y>168</y>
      <w>144</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>&lt;&lt;database wrapper&gt;&gt;
_:InventoryItem_
--
-id: int
-name: String
-price: double
-discount: double
-qty: int
-messagegThresh: int
--
#getId(): int
#getName(): String
#getPrice(): double
#getPriceWithDiscount(): double
#getDiscount(): double
#getQty(): int
#getMessageThresh(): int
#setId(int): void
#setName(String): void
#setPrice(double): void
#setDiscount(double): void
#setQty(int): void
#setMessageThresh(int): void
#subtractQty(int): void
#addQty(int): void
--
Describes an item
carried by the store.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>354</x>
      <y>336</y>
      <w>144</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;entity&gt;&gt;
_:InventoryMessageReport_
--
-imanager: InventoryManager
-report: List&lt;InventoryMessage&gt;
--
#reset(): void
#add(InventoryMessage): void
--
Denotes all items with low stock</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>282</y>
      <w>48</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
sends v</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>558</x>
      <y>336</y>
      <w>138</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;entity&gt;&gt;
_:InventoryMessage_
--
-id: int
--
#getId(): int
#reset(): void
#add(InventoryMessage): void
--
Denotes all items with low stock</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>354</y>
      <w>78</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=0..n
contains &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;110.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>648</x>
      <y>120</y>
      <w>264</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
_:DBManager_
--
-con: Connection
--
#getDBdump(): String
#getInventoryItem(int): InventoryItem
#updateItemQty(int, int): void
#updateItemName(int, String): void
#updateItemThresh(int, int): void
#updateItemPrice(int, double): void
#updateItemDiscount(int, double): void
#createItem(int, String, double, double, int, int): InventoryItem
--
Executes SQL queries</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>312</y>
      <w>174</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>&lt;&lt;entity&gt;&gt;
_:ConnectionProvider_
--
-con: Connection
-dbhost: String
-dbloginfile: String
-dbname: String
-dbPort: String
-password: String
username: String
--
#getCon(): Connection
#readCredFile(String): boolean
#readCredFile(): boolean
#setCredFile(String): void
--
Provides SQL Connection to DBManager</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>756</x>
      <y>246</y>
      <w>42</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
uses v</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>186</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
uses &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>906</x>
      <y>204</y>
      <w>102</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=0..n
provides &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;150.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>978</x>
      <y>438</y>
      <w>210</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Relation in relational database:
-Inventory ( _id_ , ItemName, Price, 
Discount, Qty, Threshold)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>996</x>
      <y>120</y>
      <w>144</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>&lt;&lt;external entity&gt;&gt;
_:Database_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>906</x>
      <y>120</y>
      <w>102</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
interfaces with &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;150.0;20.0</additional_attributes>
  </element>
</diagram>
